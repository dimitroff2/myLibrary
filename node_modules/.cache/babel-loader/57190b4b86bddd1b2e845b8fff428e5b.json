{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandi\\\\workspace\\\\frontend\\\\Capstone1\\\\mylibrary\\\\src\\\\components\\\\books\\\\BookForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { BooksContext } from \"./BookDataProvider\";\nimport \"./Books.css\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookForm = () => {\n  _s();\n\n  const {\n    addBook,\n    getBooksById,\n    updateBook,\n    getBooks\n  } = useContext(BooksContext);\n  const [bookState, setBookState] = useState({\n    userId: +localStorage.getItem(\"NutShell_User\"),\n    title: \"\",\n    author: \"\",\n    genre: \"\",\n    signed: false,\n    read: false,\n    owned: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    BookId\n  } = useParams();\n  const navigate = useNavigate();\n\n  const handleControlledInputChange = event => {\n    const newBookState = { ...bookState\n    };\n    newBookState[event.target.name] = event.target.value;\n    setBookState(newBookState);\n  };\n\n  const handleSaveEvent = () => {\n    if (parseInt(bookState.id) === 0) {\n      window.alert(\"Save a Book\");\n    } else {\n      setIsLoading(true);\n\n      if (BookId) {\n        updateBook({\n          id: +bookState.id,\n          title: bookState.title,\n          author: bookState.author,\n          genre: bookState.genre,\n          signed: Boolean(bookState.signed),\n          read: Boolean(bookState.read),\n          owned: Boolean(bookState.owned)\n        }).then(() => navigate(`/books/detail/${bookState.id}`));\n      } else {\n        //Post Add\n        addBook({\n          title: bookState.title,\n          author: bookState.author,\n          genre: bookState.genre,\n          signed: Boolean(bookState.signed),\n          read: Boolean(bookState.read),\n          owned: Boolean(bookState.owned)\n        }).then(() => navigate(\"/books\"));\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (BookId) {\n      getBooksById(BookId).then(book => {\n        setBookState(book);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"bookForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bookForm__title\",\n      children: \"Add Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Book Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          onChange: handleControlledInputChange,\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          placeholder: \"Title\",\n          defaultValue: bookState.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          onChange: handleControlledInputChange,\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          placeholder: \"author\",\n          defaultValue: bookState.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"genre\",\n          onChange: handleControlledInputChange,\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          placeholder: \"genre\",\n          defaultValue: bookState.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Signed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"signed\",\n            name: \"signed\",\n            onChange: handleControlledInputChange,\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            placeholder: \"signed\",\n            defaultValue: bookState.signed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: [\"Read:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"read\",\n            name: \"read\",\n            onChange: handleControlledInputChange,\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            placeholder: \"read\",\n            defaultValue: bookState.read\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control-label\",\n          htmlFor: \"name\",\n          children: [\"Owned:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"owned\",\n            name: \"owned\",\n            onChange: handleControlledInputChange,\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            placeholder: \"owned\",\n            defaultValue: bookState.owned\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: isLoading,\n      onClick: book => {\n        book.preventDefault(handleSaveEvent());\n      },\n      children: \"Save Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 11\n  }, this);\n};\n\n_s(BookForm, \"mK+86qXvjuRt5ZSKbYi5XEabl/A=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["C:/Users/Brandi/workspace/frontend/Capstone1/mylibrary/src/components/books/BookForm.js"],"names":["React","useContext","useEffect","useState","BooksContext","useParams","useNavigate","BookForm","addBook","getBooksById","updateBook","getBooks","bookState","setBookState","userId","localStorage","getItem","title","author","genre","signed","read","owned","isLoading","setIsLoading","BookId","navigate","handleControlledInputChange","event","newBookState","target","name","value","handleSaveEvent","parseInt","id","window","alert","Boolean","then","book","preventDefault"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\r\nimport { BooksContext } from \"./BookDataProvider\"\r\nimport \"./Books.css\"\r\nimport {useParams, useNavigate} from \"react-router-dom\"\r\n\r\nexport const BookForm = () => {\r\n    const {addBook, getBooksById, updateBook, getBooks} = useContext(BooksContext)\r\n    const [bookState, setBookState] = useState(\r\n        {\r\n            userId: +localStorage.getItem(\"NutShell_User\"),\r\n            title: \"\",\r\n            author: \"\",\r\n            genre: \"\",\r\n            signed: false,\r\n            read: false,\r\n            owned: false\r\n            \r\n            \r\n        })\r\n        \r\n\r\n        const [isLoading, setIsLoading] = useState(false);\r\n        const {BookId} = useParams();\r\n        const navigate = useNavigate();\r\n\r\n\r\n        const handleControlledInputChange = (event) => {\r\n            const newBookState = { ...bookState } \r\n            newBookState[event.target.name] = event.target.value\r\n            setBookState(newBookState)\r\n          }\r\n\r\n          \r\n          const handleSaveEvent = () => {\r\n            if (parseInt(bookState.id) === 0) {\r\n              window.alert(\"Save a Book\")\r\n            } else {\r\n              setIsLoading(true);\r\n            \r\n              if(BookId){\r\n                updateBook({\r\n                  id : +bookState.id,\r\n                  title: bookState.title,\r\n                  author: bookState.author,\r\n                  genre: bookState.genre,\r\n                  signed: Boolean(bookState.signed),\r\n                  read: Boolean(bookState.read),\r\n                  owned: Boolean(bookState.owned)\r\n                  \r\n                  \r\n                })\r\n                .then(() => navigate(`/books/detail/${bookState.id}`))\r\n              } else {\r\n                //Post Add\r\n                addBook({\r\n                  \r\n                  title: bookState.title,\r\n                  author: bookState.author,\r\n                  genre: bookState.genre,\r\n                  signed: Boolean(bookState.signed),\r\n                  read: Boolean(bookState.read),\r\n                  owned: Boolean(bookState.owned)\r\n                  \r\n                  \r\n                })\r\n                .then(() => navigate(\"/books\"))\r\n              }\r\n            }\r\n          }\r\n      \r\n\r\n          useEffect(() => {\r\n        \r\n            if(BookId){\r\n            getBooksById(BookId)\r\n              .then(book => {\r\n                setBookState(book)\r\n                setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n         \r\n        }, [])\r\n\r\n        return(\r\n          <form className=\"bookForm\">\r\n          <h2 className=\"bookForm__title\">Add Book</h2>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Book Title:</label>\r\n                  <input type=\"text\" id=\"title\" name=\"title\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"Title\" \r\n                  defaultValue={bookState.title}/>\r\n              </div>\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Author:</label>\r\n                  <input type=\"text\"  name=\"author\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"author\" \r\n                  defaultValue={bookState.author}/>\r\n              </div>\r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Genre:</label>\r\n                  <input type=\"text\" name=\"genre\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"genre\" \r\n                  defaultValue={bookState.genre}/>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Signed:\r\n                  <input type=\"checkbox\" id=\"signed\" name=\"signed\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"signed\" \r\n                  defaultValue={bookState.signed}/>\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Read:\r\n                  <input type=\"checkbox\" id=\"read\" name=\"read\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"read\" \r\n                  defaultValue={bookState.read}/>\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label className=\"control-label\" htmlFor=\"name\">Owned:\r\n                  <input type=\"checkbox\" id=\"owned\" name=\"owned\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"owned\" \r\n                  defaultValue={bookState.owned}/>\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <button className=\"btn btn-primary\"\r\n          disabled ={isLoading}\r\n            onClick={book => {\r\n              book.preventDefault(\r\n              handleSaveEvent()\r\n              )\r\n            }}>\r\n            Save Book\r\n          </button>\r\n\r\n\r\n\r\n\r\n          </form>\r\n        )\r\n\r\n        \r\n}"]},"metadata":{},"sourceType":"module"}