{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandi\\\\workspace\\\\frontend\\\\Capstone1\\\\mylibrary\\\\src\\\\components\\\\auth\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // import \"./Login.css\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n\n  const firstName = useRef();\n  const lastName = useRef();\n  const email = useRef();\n  const verifyPassword = useRef();\n  const conflictDialog = useRef();\n  const navigate = useNavigate();\n\n  const existingUserCheck = () => {\n    return fetch(`http://localhost:8088/users?email=${email.current.value}`).then(res => res.json()).then(user => !!user.length);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    existingUserCheck().then(userExists => {\n      if (!userExists) {\n        fetch(\"http://localhost:8088/users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email.current.value,\n            name: `${firstName.current.value} ${lastName.current.value}`\n          })\n        }).then(res => res.json()).then(createdUser => {\n          if (createdUser.hasOwnProperty(\"id\")) {\n            localStorage.setItem(\"NutShell_User\", createdUser.id);\n            props.setLoggedin(true);\n            navigate(\"/\");\n          }\n        });\n      } else {\n        conflictDialog.current.showModal();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"dialog\", {\n      className: \"dialog dialog--password\",\n      ref: conflictDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Account with that email address already exists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button--close\",\n        onClick: e => conflictDialog.current.close(),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form--login\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 font-weight-normal\",\n        children: \"Please Register for Nutshell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \" First Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: firstName,\n          type: \"text\",\n          name: \"firstName\",\n          className: \"form-control\",\n          placeholder: \"First name\",\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \" Last Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: lastName,\n          type: \"text\",\n          name: \"lastName\",\n          className: \"form-control\",\n          placeholder: \"Last name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmail\",\n          children: \" Email address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: email,\n          type: \"email\",\n          name: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"e8GE8R6ST3XwA9nMoD5YINy+FA4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Brandi/workspace/frontend/Capstone1/mylibrary/src/components/auth/Register.js"],"names":["React","useRef","useNavigate","Register","props","firstName","lastName","email","verifyPassword","conflictDialog","navigate","existingUserCheck","fetch","current","value","then","res","json","user","length","handleRegister","e","preventDefault","userExists","method","headers","body","JSON","stringify","name","createdUser","hasOwnProperty","localStorage","setItem","id","setLoggedin","showModal","textAlign","close"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n// import \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const navigate = useNavigate()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    fetch(\"http://localhost:8088/users\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: email.current.value,\r\n                            name: `${firstName.current.value} ${lastName.current.value}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"NutShell_User\", createdUser.id)\r\n                                props.setLoggedin(true)\r\n                                navigate(\"/\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Nutshell</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}