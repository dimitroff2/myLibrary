{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandi\\\\workspace\\\\frontend\\\\Capstone1\\\\mylibrary\\\\src\\\\components\\\\books\\\\BookDataProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BooksContext = /*#__PURE__*/createContext();\nexport const BooksProvider = props => {\n  _s();\n\n  const [books, setBooks] = useState([]); //retrieving books from books json\n\n  const getBooks = () => {\n    return fetch(\"http://localhost:8088/books\").then(res => res.json()).then(setBooks);\n  }; //grabbing the id for the books\n\n\n  const getBooksById = id => {\n    return fetch(`http://localhost:8088/books/${id}?`).then(res => res.json());\n  };\n\n  const addBook = eventObj => {\n    return fetch(\"http://localhost:8088/books\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(eventObj)\n    }).then(getBooks);\n  };\n\n  const deleteBook = bookId => {\n    return fetch(`http://localhost:8088/books/${bookId}`, {\n      method: \"DELETE\"\n    }).then(getBooks);\n  };\n\n  const updateBook = book => {\n    return fetch(`http://localhost:8088/books/${book.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    }).then(getBooks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BooksContext.Provider, {\n    value: {\n      books,\n      setBooks,\n      getBooks,\n      addBook,\n      deleteBook,\n      getBooksById,\n      updateBook\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n\n_s(BooksProvider, \"/iW9mSwgc4d+8Agrl++FSS1ccl8=\");\n\n_c = BooksProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksProvider\");","map":{"version":3,"sources":["C:/Users/Brandi/workspace/frontend/Capstone1/mylibrary/src/components/books/BookDataProvider.js"],"names":["React","useState","createContext","BooksContext","BooksProvider","props","books","setBooks","getBooks","fetch","then","res","json","getBooksById","id","addBook","eventObj","method","headers","body","JSON","stringify","deleteBook","bookId","updateBook","book","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;AAEP,OAAO,MAAME,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADoC,CAEhC;;AACA,QAAMO,QAAQ,GAAG,MAAM;AACnB,WAAOC,KAAK,CAAC,6BAAD,CAAL,CACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDH,QAFC,CAAP;AAGH,GAJD,CAHgC,CAQhC;;;AACA,QAAMM,YAAY,GAAIC,EAAD,IAAQ;AACzB,WAAOL,KAAK,CAAE,+BAA8BK,EAAG,GAAnC,CAAL,CACFJ,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,CAAP;AAED,GAHH;;AAKA,QAAMG,OAAO,GAAGC,QAAQ,IAAI;AACxB,WAAOP,KAAK,CAAC,6BAAD,EAAgC;AACxCQ,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AALkC,KAAhC,CAAL,CAONN,IAPM,CAODF,QAPC,CAAP;AAQH,GATD;;AAWA,QAAMc,UAAU,GAAGC,MAAM,IAAI;AACzB,WAAOd,KAAK,CAAE,+BAA8Bc,MAAO,EAAvC,EAA0C;AAClDN,MAAAA,MAAM,EAAE;AAD0C,KAA1C,CAAL,CAGFP,IAHE,CAGGF,QAHH,CAAP;AAIH,GALD;;AAOA,QAAMgB,UAAU,GAAGC,IAAI,IAAI;AACvB,WAAOhB,KAAK,CAAE,+BAA8BgB,IAAI,CAACX,EAAG,EAAxC,EAA2C;AACrDG,MAAAA,MAAM,EAAE,KAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,IAAf;AAL+C,KAA3C,CAAL,CAOJf,IAPI,CAOCF,QAPD,CAAP;AAQD,GATH;;AAWA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BF,MAAAA,KAD0B;AACnBC,MAAAA,QADmB;AACTC,MAAAA,QADS;AACCO,MAAAA,OADD;AACUO,MAAAA,UADV;AACsBT,MAAAA,YADtB;AACoCW,MAAAA;AADpC,KAA9B;AAAA,cAGKnB,KAAK,CAACqB;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP,CAnDM;;GAAMtB,a;;KAAAA,a","sourcesContent":["import React, { useState, createContext } from \"react\"\r\n\r\nexport const BooksContext = createContext()\r\n\r\nexport const BooksProvider = (props) => {\r\n    const [books, setBooks] = useState([])\r\n        //retrieving books from books json\r\n        const getBooks = () => {\r\n            return fetch(\"http://localhost:8088/books\")\r\n            .then(res => res.json())\r\n            .then(setBooks)\r\n        }\r\n        //grabbing the id for the books\r\n        const getBooksById = (id) => {\r\n            return fetch(`http://localhost:8088/books/${id}?`)\r\n                .then(res => res.json())\r\n          }\r\n\r\n        const addBook = eventObj => {\r\n            return fetch(\"http://localhost:8088/books\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(eventObj)\r\n            })\r\n            .then(getBooks)\r\n        }\r\n\r\n        const deleteBook = bookId => {\r\n            return fetch(`http://localhost:8088/books/${bookId}`, {\r\n                method: \"DELETE\"\r\n            })\r\n                .then(getBooks)\r\n        }\r\n\r\n        const updateBook = book => {\r\n            return fetch(`http://localhost:8088/books/${book.id}`, {\r\n              method: \"PUT\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify(book)\r\n            })\r\n              .then(getBooks)\r\n          }\r\n\r\n        return (\r\n            <BooksContext.Provider value={{ \r\n                books, setBooks, getBooks, addBook, deleteBook, getBooksById, updateBook \r\n            }}>\r\n                {props.children}\r\n            </BooksContext.Provider>\r\n        )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}