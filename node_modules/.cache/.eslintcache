[{"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\index.js":"1","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\ApplicationViews.js":"2","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookDataProvider.js":"3","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookList.js":"4","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookCard.js":"5","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookDetails.js":"6","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookForm.js":"7","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\nav\\NavBar.js":"8","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\Nutshell.js":"9","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\auth\\Register.js":"10","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\auth\\Login.js":"11","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\Home.js":"12"},{"size":621,"mtime":1641582797238,"results":"13","hashOfConfig":"14"},{"size":915,"mtime":1641915114816,"results":"15","hashOfConfig":"14"},{"size":1824,"mtime":1642003727637,"results":"16","hashOfConfig":"14"},{"size":730,"mtime":1641832764035,"results":"17","hashOfConfig":"14"},{"size":1169,"mtime":1642003690909,"results":"18","hashOfConfig":"14"},{"size":1336,"mtime":1641999609417,"results":"19","hashOfConfig":"14"},{"size":5933,"mtime":1641932474523,"results":"20","hashOfConfig":"14"},{"size":1294,"mtime":1641914636105,"results":"21","hashOfConfig":"14"},{"size":1095,"mtime":1641586438138,"results":"22","hashOfConfig":"14"},{"size":3248,"mtime":1639773874969,"results":"23","hashOfConfig":"14"},{"size":2304,"mtime":1641494569818,"results":"24","hashOfConfig":"14"},{"size":1054,"mtime":1641934397677,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"zi1yui",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"29"},"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\index.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { ApplicationViews } from './components/ApplicationViews';\nimport { Nutshell } from './components/Nutshell';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Nutshell />\n        </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["60","61"],"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookDataProvider.js",[],"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookList.js",["62","63","64"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { BooksContext } from \"./BookDataProvider\"\r\nimport {BookCard} from \"./BookCard\"\r\nimport \"./Books.css\"\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\n\r\nexport const BookList = () => {\r\n    const {books, getBooks} = useContext(BooksContext)\r\n\r\n    useEffect(()=>{\r\n      console.log(\"Books show up!\")\r\n        getBooks()\r\n    }, [])\r\n    \r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n          <h1>My Books</h1>\r\n          \r\n          <div className=\"books\">\r\n          {\r\n            books.map(book => {\r\n              return <BookCard key={book.id} book={book} />\r\n            })\r\n          }\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookCard.js",["65","66","67","68","69"],"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookDetails.js",["70"],"C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\books\\BookForm.js",["71","72"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { BooksContext } from \"./BookDataProvider\"\r\nimport \"./Books.css\"\r\nimport {useParams, useNavigate} from \"react-router-dom\"\r\n\r\nexport const BookForm = () => {\r\n    const {addBook, getBooksById, updateBook, getBooks} = useContext(BooksContext)\r\n    const [bookState, setBookState] = useState(\r\n        {\r\n            userId: +localStorage.getItem(\"NutShell_User\"),\r\n            title: \"\",\r\n            author: \"\",\r\n            genre: \"\",\r\n            signed: false,\r\n            read: false,\r\n            owned: false\r\n            \r\n            \r\n        })\r\n        \r\n\r\n        const [isLoading, setIsLoading] = useState(false);\r\n        const {BookId} = useParams();\r\n        const navigate = useNavigate();\r\n\r\n\r\n        const handleControlledInputChange = (event) => {\r\n            const newBookState = { ...bookState } \r\n            newBookState[event.target.name] = event.target.value\r\n            setBookState(newBookState)\r\n          }\r\n          const handleControlledInputChecked = (event) => {\r\n            const newBookState = { ...bookState } \r\n            newBookState[event.target.name] = event.target.checked\r\n            setBookState(newBookState)\r\n          }\r\n\r\n          \r\n          const handleSaveEvent = () => {\r\n            if (parseInt(bookState.id) === 0) {\r\n              window.alert(\"Save a Book\")\r\n            } else {\r\n              setIsLoading(true);\r\n            \r\n              if(BookId){\r\n                updateBook({\r\n                  id : +bookState.id,\r\n                  title: bookState.title,\r\n                  author: bookState.author,\r\n                  genre: bookState.genre,\r\n                  signed: Boolean(bookState.signed),\r\n                  read: Boolean(bookState.read),\r\n                  owned: Boolean(bookState.owned)\r\n                  \r\n                  \r\n                })\r\n                .then(() => navigate(`/books/detail/${bookState.id}`))\r\n              } else {\r\n                //Post Add\r\n                addBook({\r\n                  \r\n                  title: bookState.title,\r\n                  author: bookState.author,\r\n                  genre: bookState.genre,\r\n                  signed: Boolean(bookState.signed),\r\n                  read: Boolean(bookState.read),\r\n                  owned: Boolean(bookState.owned)\r\n                  \r\n                  \r\n                })\r\n                .then(() => navigate(\"/books\"))\r\n              }\r\n            }\r\n          }\r\n      \r\n\r\n          useEffect(() => {\r\n        \r\n            if(BookId){\r\n            getBooksById(BookId)\r\n              .then(book => {\r\n                setBookState(book)\r\n                setIsLoading(false)\r\n              })\r\n            } else {\r\n              setIsLoading(false)\r\n            }\r\n         \r\n        }, [])\r\n\r\n        return(\r\n          <form className=\"bookForm\" >\r\n          <h2 className=\"bookForm__title\">Add Book</h2>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Book Title:</label>\r\n                  <input type=\"text\" id=\"title\" name=\"title\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"Title\" \r\n                  defaultValue={bookState.title}/>\r\n              </div>\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Author:</label>\r\n                  <input type=\"text\"  name=\"author\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"author\" \r\n                  defaultValue={bookState.author}/>\r\n              </div>\r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Genre:</label>\r\n                  <input type=\"text\" name=\"genre\" \r\n                  onChange={handleControlledInputChange} required autoFocus className=\"form-control\"\r\n                  placeholder=\"genre\" \r\n                  defaultValue={bookState.genre}/>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Signed:\r\n                  <input type=\"checkbox\" id=\"signed\" name=\"signed\" \r\n                  checked={bookState.signed}\r\n                  onChange={handleControlledInputChecked} required autoFocus \r\n                  placeholder=\"signed\" \r\n               />\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Read:\r\n                  <input type=\"checkbox\" id=\"read\" name=\"read\" \r\n                  onChange={handleControlledInputChecked} required autoFocus \r\n                  placeholder=\"read\" \r\n                  defaultValue={bookState.read}/>\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label className=\"control-label\" htmlFor=\"name\">Owned:\r\n                  <input type=\"checkbox\" id=\"owned\" name=\"owned\" \r\n                  onChange={handleControlledInputChecked} required autoFocus \r\n                  placeholder=\"owned\" \r\n                  defaultValue={bookState.owned}/>\r\n                  </label>\r\n              </div>      \r\n\r\n              </fieldset>\r\n\r\n              <button className=\"btn btn-primary\"\r\n          disabled ={isLoading}\r\n            onClick={book => {\r\n              book.preventDefault(\r\n              handleSaveEvent()\r\n              )\r\n            }}>\r\n            Save Book\r\n          </button>\r\n\r\n\r\n\r\n\r\n          </form>\r\n        )\r\n\r\n        \r\n}","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\nav\\NavBar.js",["73","74"],"import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Button } from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n\r\nexport const NavBar =() => {\r\n   \r\n        return (\r\n            <nav className=\"navbar bg-dark text-white flex-md-nowrap p-0 shadow\">\r\n                <ul className=\"nav nav-pills nav-fill\">\r\n\r\n                <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/books\">My Library</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/books/create\">Add Book</Link>\r\n                    </li>\r\n                    \r\n                </ul>\r\n                <span className=\"navbar-text\">\r\n                    <ul className=\"nav nav-pills nav-fill\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                </span>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n\r\nexport default NavBar","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\Nutshell.js",["75"],"import {ApplicationViews} from \"./ApplicationViews\";\r\nimport React, { useState } from \"react\";\r\nimport { Routes, Route, Navigate} from \"react-router-dom\";\r\nimport { Login } from \"./auth/Login\"\r\nimport { Register } from \"./auth/Register\";\r\nimport NavBar from \"./nav/NavBar\";\r\n\r\n\r\n\r\n\r\n\r\nexport const Nutshell = () => {\r\n    const [loggedin, setLoggedin] = useState(false);\r\n  \r\n    const changeState = (bool) => setLoggedin(bool);\r\n    \r\n    if (localStorage.getItem(\"NutShell_User\")) {\r\n      return (\r\n        <>\r\n          <NavBar />         \r\n          <ApplicationViews />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <Routes>\r\n          \r\n          <Route path=\"/\" element={<Navigate to=\"login\" />} />\r\n          <Route path=\"/login\" element={<Login setLoggedin={changeState} />} />          \r\n          <Route path=\"/register\" element={<Register setLoggedin={changeState} />} />\r\n          <Route path=\"/\" element= {<p> word </p>} />\r\n          <Route index element={<div>Default Page Content</div>} /> \r\n          \r\n          \r\n        </Routes>\r\n      );\r\n    }\r\n  };\r\n  ","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\auth\\Register.js",["76"],"import React, { useRef } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n// import \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const navigate = useNavigate()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    fetch(\"http://localhost:8088/users\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: email.current.value,\r\n                            name: `${firstName.current.value} ${lastName.current.value}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"NutShell_User\", createdUser.id)\r\n                                props.setLoggedin(true)\r\n                                navigate(\"/\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <main style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Nutshell</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\auth\\Login.js",["77"],"import React, { useRef } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n// import \"./Login.css\"\r\n\r\n\r\nexport const Login = (props) => {\r\n    const email = useRef()\r\n    const password = useRef()\r\n    const existDialog = useRef()\r\n    const navigate = useNavigate() //\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    localStorage.setItem(\"NutShell_User\", exists.id)\r\n                    props.setLoggedin(true)\r\n                    navigate(\"/\") // change to navigate(\"/\")\r\n                } else {\r\n                    existDialog.current.showModal()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <section>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h1>My Library</h1>\r\n                    <h2>Please sign in</h2>\r\n                    <fieldset>\r\n                        <label htmlFor=\"inputEmail\"> Email address </label>\r\n                        <input ref={email} type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus />\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <button type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n            <section className=\"link--register\">\r\n                <Link to=\"/register\">Not a member yet?</Link>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Brandi\\workspace\\frontend\\Capstone1\\mylibrary\\src\\components\\Home.js",["78","79","80"],"\r\nimport React, { useContext, useEffect} from \"react\";\r\nimport { BooksContext } from \"./books/BookDataProvider\";\r\nimport Pic from \"./Pic.jpg\"\r\nimport \"./HomePage.css\"\r\n \r\nexport const Home  = (book) => {\r\n  const {books, getBooks} = useContext(BooksContext)\r\n\r\n    useEffect(()=>{\r\n      \r\n        getBooks()\r\n    }, [])\r\n\r\n  return (\r\n   \r\n      <div>\r\n        <div className=\"Pic\">\r\n         \r\n          <img src={Pic}/>\r\n          </div>\r\n        <div className=\"Welcome\"><h2><b>WELCOME TO MY LIBRARY</b></h2>\r\n        <p><i>A place to keep track of your library.</i></p></div>\r\n\r\n        <div className=\"Wishlist\">\r\n        <h2>WishList</h2>\r\n\r\n        \r\n        {books.filter(book => book.owned == false).map(filteredOwned => (\r\n        <li >{filteredOwned.title}</li> ))}\r\n        </div>\r\n\r\n        <div className=\"Favorite\"><h2>Favorites</h2>\r\n        \r\n        \r\n      {books.slice(0,5).map(filteredFav => (\r\n        <li>\r\n          {filteredFav.title}\r\n        </li>\r\n      ))}\r\n    </div>\r\n      \r\n \r\n        \r\n      </div>\r\n    );\r\n    \r\n}\r\n\r\n",{"ruleId":"81","severity":1,"message":"82","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":26},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":1,"column":40,"nodeType":"83","messageId":"84","endLine":1,"endColumn":48},{"ruleId":"90","severity":1,"message":"91","line":14,"column":8,"nodeType":"92","endLine":14,"endColumn":10,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"94","line":16,"column":11,"nodeType":"83","messageId":"84","endLine":16,"endColumn":19},{"ruleId":"81","severity":1,"message":"95","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"96","line":4,"column":17,"nodeType":"83","messageId":"84","endLine":4,"endColumn":27},{"ruleId":"81","severity":1,"message":"97","line":4,"column":29,"nodeType":"83","messageId":"84","endLine":4,"endColumn":38},{"ruleId":"81","severity":1,"message":"89","line":4,"column":40,"nodeType":"83","messageId":"84","endLine":4,"endColumn":48},{"ruleId":"81","severity":1,"message":"98","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":22},{"ruleId":"90","severity":1,"message":"99","line":19,"column":12,"nodeType":"92","endLine":19,"endColumn":14,"suggestions":"100"},{"ruleId":"81","severity":1,"message":"101","line":7,"column":47,"nodeType":"83","messageId":"84","endLine":7,"endColumn":55},{"ruleId":"90","severity":1,"message":"99","line":89,"column":12,"nodeType":"92","endLine":89,"endColumn":14,"suggestions":"102"},{"ruleId":"81","severity":1,"message":"103","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"104","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"105","line":13,"column":12,"nodeType":"83","messageId":"84","endLine":13,"endColumn":20},{"ruleId":"81","severity":1,"message":"106","line":9,"column":11,"nodeType":"83","messageId":"84","endLine":9,"endColumn":25},{"ruleId":"81","severity":1,"message":"107","line":9,"column":11,"nodeType":"83","messageId":"84","endLine":9,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":13,"column":8,"nodeType":"92","endLine":13,"endColumn":10,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":20,"column":11,"nodeType":"111","endLine":20,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":29,"column":42,"nodeType":"114","messageId":"115","endLine":29,"endColumn":44},"no-unused-vars","'ApplicationViews' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'navigate' is assigned a value but never used.","'useParams' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'BooksContext' is defined but never used.","React Hook useEffect has missing dependencies: 'BookId' and 'getBooksById'. Either include them or remove the dependency array.",["119"],"'getBooks' is assigned a value but never used.",["120"],"'Component' is defined but never used.","'Button' is defined but never used.","'loggedin' is assigned a value but never used.","'verifyPassword' is assigned a value but never used.","'password' is assigned a value but never used.",["121"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},{"desc":"122","fix":"127"},"Update the dependencies array to be: [getBooks]",{"range":"128","text":"129"},"Update the dependencies array to be: [BookId, getBooksById]",{"range":"130","text":"131"},{"range":"132","text":"131"},{"range":"133","text":"129"},[400,402],"[getBooks]",[593,595],"[BookId, getBooksById]",[2843,2845],[317,319]]